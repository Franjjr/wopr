"""empty message

Revision ID: 9a83706fe473
Revises: 
Create Date: 2024-05-15 22:08:04.699799

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9a83706fe473'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('centers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('address', sa.String(length=20), nullable=False),
    sa.Column('manager', sa.String(length=20), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compositions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meals', sa.Integer(), nullable=False),
    sa.Column('cost_meals', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('references',
    sa.Column('idWopr', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('reference', sa.Integer(), nullable=True),
    sa.Column('categoryId', sa.Integer(), nullable=True),
    sa.Column('familyId', sa.Integer(), nullable=True),
    sa.Column('typeId', sa.Integer(), nullable=True),
    sa.Column('subtypeId', sa.Integer(), nullable=True),
    sa.Column('measureUnitId', sa.Integer(), nullable=True),
    sa.Column('measurePriceLastPurchase', sa.Integer(), nullable=True),
    sa.Column('measurePriceAverage', sa.Integer(), nullable=True),
    sa.Column('displayUnitId', sa.Integer(), nullable=True),
    sa.Column('equivalenceBetweeenMeasureAndDisplay', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('creationDate', sa.DateTime(), nullable=True),
    sa.Column('modificationDate', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('idWopr'),
    sa.UniqueConstraint('reference')
    )
    op.create_table('suppliers',
    sa.Column('idWopr', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('reference', sa.String(length=50), nullable=True),
    sa.Column('categoryId', sa.String(length=50), nullable=True),
    sa.Column('subcategoryId', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('nameRegistered', sa.String(length=200), nullable=True),
    sa.Column('cif', sa.String(length=200), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('addressAdditional', sa.String(length=500), nullable=True),
    sa.Column('addressNumber', sa.String(length=500), nullable=True),
    sa.Column('addressFloor', sa.String(length=500), nullable=True),
    sa.Column('addressLetter', sa.String(length=500), nullable=True),
    sa.Column('codePostal', sa.String(length=500), nullable=True),
    sa.Column('cityCode', sa.String(length=500), nullable=True),
    sa.Column('cityName', sa.String(length=500), nullable=True),
    sa.Column('provinceCode', sa.String(length=500), nullable=True),
    sa.Column('provinceName', sa.String(length=500), nullable=True),
    sa.Column('phone1', sa.String(length=150), nullable=True),
    sa.Column('phone2', sa.String(length=150), nullable=True),
    sa.Column('fax', sa.String(length=150), nullable=True),
    sa.Column('mobile', sa.String(length=150), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('languageCode', sa.String(length=500), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('creationDate', sa.DateTime(), nullable=True),
    sa.Column('modificationDate', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('idWopr')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('rol', sa.Enum('Admin', 'Jefe de Compras', 'Cocinero', name='rol'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('composition_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('units_recipe', sa.Integer(), nullable=False),
    sa.Column('cost_unit_line', sa.Integer(), nullable=False),
    sa.Column('composition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['composition_id'], ['compositions.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('delivery_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('sum_costs', sa.Integer(), nullable=False),
    sa.Column('sum_totals', sa.Integer(), nullable=False),
    sa.Column('sum_vat', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('Hoja de Envio', 'Albaran', name='status'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('line_recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('references_idWopr', sa.Integer(), nullable=True),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('units', sa.Integer(), nullable=False),
    sa.Column('cost_unit', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.ForeignKeyConstraint(['references_idWopr'], ['references.idWopr'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufacturing_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('delivery_date', sa.DateTime(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('Pendiente', 'En Proceso', 'Fabricado', 'Almacenado', 'Enviado', name='status'), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('previsions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products_formats',
    sa.Column('idWopr', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('productPurchaseId', sa.String(), nullable=True),
    sa.Column('reference', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('storageUnit', sa.String(), nullable=True),
    sa.Column('orderUnit', sa.String(), nullable=True),
    sa.Column('equivalenceBetweenMeasureAndStorage', sa.Integer(), nullable=True),
    sa.Column('equivalenceBetweenStorageAndOrder', sa.Integer(), nullable=True),
    sa.Column('storageBarcode', sa.String(), nullable=True),
    sa.Column('orderBarcode', sa.String(), nullable=True),
    sa.Column('storageWeight', sa.Integer(), nullable=True),
    sa.Column('orderWeight', sa.Integer(), nullable=True),
    sa.Column('conservationState', sa.Integer(), nullable=True),
    sa.Column('measurePriceLastPurchase', sa.Integer(), nullable=True),
    sa.Column('measurePriceAverage', sa.Integer(), nullable=True),
    sa.Column('storagePrice', sa.Integer(), nullable=True),
    sa.Column('storagePriceAverage', sa.Integer(), nullable=True),
    sa.Column('orderPrice', sa.Integer(), nullable=True),
    sa.Column('orderPriceAverage', sa.Integer(), nullable=True),
    sa.Column('creationDate', sa.DateTime(), nullable=True),
    sa.Column('modificationDate', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reference'], ['references.reference'], ),
    sa.PrimaryKeyConstraint('idWopr')
    )
    op.create_table('delivery_note_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('unit_cost', sa.Integer(), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('vat', sa.Enum('4', '10', '21', name='vat'), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('delivery_note_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['delivery_note_id'], ['delivery_notes.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prevision_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prevision_id', sa.Integer(), nullable=True),
    sa.Column('service', sa.Enum('Desayuno', 'Almuerzo', 'Cena', name='service'), nullable=False),
    sa.Column('pax_service', sa.Integer(), nullable=False),
    sa.Column('composition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['composition_id'], ['compositions.id'], ),
    sa.ForeignKeyConstraint(['prevision_id'], ['previsions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prevision_lines')
    op.drop_table('delivery_note_lines')
    op.drop_table('products_formats')
    op.drop_table('previsions')
    op.drop_table('manufacturing_orders')
    op.drop_table('line_recipes')
    op.drop_table('delivery_notes')
    op.drop_table('composition_lines')
    op.drop_table('users')
    op.drop_table('suppliers')
    op.drop_table('references')
    op.drop_table('recipes')
    op.drop_table('compositions')
    op.drop_table('centers')
    # ### end Alembic commands ###
